using System;
using System.Data.SqlClient;
using System.Drawing;
using System.Windows.Forms;
using AForge.Video;
using AForge.Video.DirectShow;
using ZXing;

namespace QRCodeAttendanceSystem
{
    public partial class Form1 : Form
    {
        private FilterInfoCollection captureDevices;
        private VideoCaptureDevice videoDevice;
        private bool isScanning = false;
        private DateTime lastScanTime = DateTime.MinValue;

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            try
            {
                captureDevices = new FilterInfoCollection(FilterCategory.VideoInputDevice);

                if (captureDevices.Count == 0)
                {
                    MessageBox.Show("No camera detected!");
                    btnStart.Enabled = false;
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error initializing camera: " + ex.Message);
            }
        }

        private void btnStart_Click(object sender, EventArgs e)
        {
            try
            {
                if (videoDevice != null && videoDevice.IsRunning)
                {
                    // Stop camera
                    videoDevice.SignalToStop();
                    btnStart.Text = "Start Camera";
                    isScanning = false;
                    return;
                }

                // Start camera
                videoDevice = new VideoCaptureDevice(captureDevices[0].MonikerString);
                videoDevice.NewFrame += new NewFrameEventHandler(VideoDevice_NewFrame);
                videoDevice.Start();

                btnStart.Text = "Stop Camera";
                isScanning = true;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Camera error: " + ex.Message);
            }
        }

        private void VideoDevice_NewFrame(object sender, NewFrameEventArgs eventArgs)
        {
            try
            {
                Bitmap frame = (Bitmap)eventArgs.Frame.Clone();
                pictureBox1.Image = (Bitmap)frame.Clone();

                if (isScanning)
                {
                    BarcodeReader reader = new BarcodeReader();
                    var result = reader.Decode(frame);

                    if (result != null)
                    {
                        string qrText = result.Text;

                        // prevent double reads within 2 seconds
                        if ((DateTime.Now - lastScanTime).TotalSeconds > 2)
                        {
                            lastScanTime = DateTime.Now;

                            if (!listBoxScans.Items.Contains(qrText))
                            {
                                string logEntry = $"{DateTime.Now:HH:mm:ss} - {qrText}";
                                Invoke(new Action(() =>
                                {
                                    listBoxScans.Items.Add(logEntry);
                                }));

                                SaveAttendance(qrText);
                            }
                        }
                    }
                }

                frame.Dispose();
            }
            catch { }
        }

        private void SaveAttendance(string qrData)
        {
            string connectionString = "Data Source=localhost;Initial Catalog=SchoolData;Integrated Security=True";

            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                try
                {
                    conn.Open();

                    string query = "INSERT INTO AttendanceLogs (QRData, ScanTime) VALUES (@qr, @time)";
                    using (SqlCommand cmd = new SqlCommand(query, conn))
                    {
                        cmd.Parameters.AddWithValue("@qr", qrData);
                        cmd.Parameters.AddWithValue("@time", DateTime.Now);
                        cmd.ExecuteNonQuery();
                    }
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Database error: " + ex.Message);
                }
            }
        }

        private void Form1_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (videoDevice != null && videoDevice.IsRunning)
            {
                videoDevice.SignalToStop();
            }
        }
    }
}
